class LazyFetch{constructor(t,{lazyload:a,callback:e=function(){}}={}){return this.container=t,this.lazyload=a,this.callback=e,t?(this.target=this.container.querySelector(".intersection-loader-target"),this.target?this.target.dataset.hasOwnProperty("url")?this.target.dataset.hasOwnProperty("search")?this.target.dataset.hasOwnProperty("page")?this.target.dataset.hasOwnProperty("next")?this.target.dataset.hasOwnProperty("last")?this.target.dataset.hasOwnProperty("limit")?this.target.dataset.hasOwnProperty("sort")?this.target.dataset.hasOwnProperty("order")?(this.url=this.target.dataset.url,this.search=this.target.dataset.search,this.page=this.target.dataset.page,this.next=this.target.dataset.next,this.last=this.target.dataset.last,this.limit=this.target.dataset.limit,this.sort=this.target.dataset.sort,this.order=this.target.dataset.order,this.observer=new IntersectionObserver((t,a)=>{t.forEach(t=>{t.isIntersecting&&this.fetch(t.target)})},{root:null,rootMargin:"0px",threshold:.1}),void this.observer.observe(this.target)):(console.warn("LazyFetch: data-order not found in target"),!1):(console.warn("LazyFetch: data-sort not found in target"),!1):(console.warn("LazyFetch: data-limit not found in target"),!1):(console.warn("LazyFetch: data-last not found in target"),!1):(console.warn("LazyFetch: data-next not found in target"),!1):(console.warn("LazyFetch: data-page not found in target"),!1):(console.warn("LazyFetch: data-search not found in target"),!1):(console.warn("LazyFetch: url not found"),!1):(console.warn("LazyFetch: target not found"),!1)):(console.warn("LazyFetch: container not found"),!1)}fetch(a){if(this.page==this.last)return a.remove();var t=JSON.stringify({search:this.search,page:this.page,next:this.next,last:this.last,limit:this.limit,sort:this.sort,order:this.order});fetch(this.url,{method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json","Content-length":t.length},body:t}).then(t=>t.json().then(t=>{t?.status?(t?.html&&(a.insertAdjacentHTML("beforebegin",t.html),this.page=a.dataset.page=t.page,this.next=a.dataset.next=t.next,this.last=a.dataset.last=t.last,this.container.appendChild(a),this.lazyload.update()),this.callback()):(alert(error),console.error("LazyFetch:",t?.message))}).catch(t=>{alert(t),console.error("LazyFetch:",t)})).catch(t=>{alert(t),console.error("LazyFetch:",t)})}}