#!/usr/bin/php
<?php

declare(strict_types=1);

use App\Database\{
    Articles,
    Categories,
    Ratings,
    Users,
    Views
};

use Tischmann\Atlantis\{Console};

require_once __DIR__ . "/bootstrap/require.php";

require_once __DIR__ . "/bootstrap/config.php";

require_once __DIR__ . "/vendor/autoload.php";

$namespace = "App\\Database\\";

$dir = __DIR__ . "/app/Database";

$migrations = [
    new Users(),
    new Categories(),
    new Views(),
    new Ratings(),
    new Articles(),
];

foreach (Console::parse($argv) as $command => $value) {
    switch ($command) {
        case 'remove':
            Console::separator();
            Console::print("Очистка БД", "");
            Console::separator();

            foreach ($migrations as $migration) {
                if (!$migration->drop()) {
                    Console::print(
                        "Ошибка при удалении таблицы",
                        $migration::name()
                    );
                } else {
                    Console::print("Таблица удалена", $migration::name());
                }
            }

            Console::separator();
            Console::print("Очистка БД завершена", "");
            Console::separator();
            break;
        case 'create':
            Console::separator();
            Console::print("Создание БД", "");
            Console::separator();

            $migrations = [
                new Users(),
                new Categories(),
                new Views(),
                new Ratings(),
                new Articles(),
            ];

            foreach ($migrations as $migration) {
                if (!$migration->create()) {
                    Console::print(
                        "Ошибка при создании таблицы",
                        $migration::name()
                    );
                } else {
                    Console::print("Таблица создана", $migration::name());
                }
            }

            Console::separator();
            Console::print("Создание БД завершено", "");
            Console::separator();
            break;
        case 'seed':
            Console::separator();
            Console::print("Заполнение БД", "");
            Console::separator();

            foreach ($migrations as $migration) {
                $inserted = $migration->seed();

                Console::print(
                    "Записей добавлено: {$inserted}",
                    $migration::name()
                );
            }

            Console::separator();
            Console::print("Заполнение БД завершено", "");
            Console::separator();
            break;
    }
}
